#!/usr/bin/env ruby
require File.join(File.dirname(__FILE__), '..', 'config', 'environment')
require 'logger'
@logger = Logger.new(RAILS_ROOT + "/log/update_podcasts.log")

if(ARGV[0])
  begin
    podcast = Podcast.find(ARGV[0])
    @logger.info "Getting episodes for #{podcast.title}"
    qf = podcast.queued_feed || podcast.create_queued_feed
    PodcastProcessor.process(qf, @logger)
  rescue Exception => e
    @logger.fatal "There was a problem: #{e.message}"
  end
  exit
end

sleeptime = 60

while true
  QueuedFeed.parsed.each do |qf|
    begin
      @logger.info "Getting episodes for #{qf.podcast ? qf.podcast.title : qf.url}"
      PodcastProcessor.process(qf, @logger)
    rescue Exception => e
      @logger.fatal "There was a problem: #{e.message}"
    end
  end
  # Sleep N minutes until we refresh podcasts
  sleep sleeptime.minutes.to_i
  @logger.info "Sleeping #{sleeptime} minutes..."
end
