#!/usr/bin/env ruby
#ENV['RAILS_ENV']='test'
require File.dirname(__FILE__) + '/../config/environment'

File.open("#{RAILS_ROOT}/tmp/pids/dj.pid", "w") { |f| f.write(Process.pid) }

SLEEP = 5

trap('TERM') { puts 'Exiting...'; $exit = true }
trap('INT')  { puts 'Exiting...'; $exit = true }

puts "*** Starting job worker #{Delayed::Job.worker_name}" 
puts ENV['RAILS_ENV']
puts RAILS_ENV
p ActiveRecord::Base.connection

begin
  
  loop do  
    result = nil                                 
    
    realtime = Benchmark.realtime do  
      result = Delayed::Job.work_off      
    end                                                                          
    
    count = result.sum
    
    break if $exit
    
    if count.zero? 
      sleep(SLEEP)
      puts 'Waiting for more jobs...'
    else
      status = "#{count} jobs processed at %.4f j/s, %d failed ..." % [count / realtime, result.last]
      RAILS_DEFAULT_LOGGER.info status
      puts status
    end
    
    break if $exit
  end
ensure
  File.delete("#{RAILS_ROOT}/tmp/pids/dj.pid")
  Delayed::Job.clear_locks!
end  

